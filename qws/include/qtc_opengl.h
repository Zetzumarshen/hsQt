/////////////////////////////////////////////////////////////////////////////
//      
//      File      : qtc_opengl.h
//      Copyright : (c) David Harley 2010
//      Project   : qtHaskell
//      Version   : 1.1.4
//      Modified  : 2010-09-02 17:01:51
//      
//      Warning   : this file is machine generated - do not modify.
//      
/////////////////////////////////////////////////////////////////////////////

QTCEXPORT(void*,qtc_QGLColormap)();
QTCEXPORT(void*,qtc_QGLColormap1)(void* x1);
QTCEXPORT(void,qtc_QGLColormap_detach)(void* x0);
QTCEXPORT(void*,qtc_QGLColormap_entryColor)(void* x0, int x1);
QTCEXPORT(unsigned int,qtc_QGLColormap_entryRgb)(void* x0, int x1);
QTCEXPORT(int,qtc_QGLColormap_find)(void* x0, unsigned int x1);
QTCEXPORT(int,qtc_QGLColormap_findNearest)(void* x0, unsigned int x1);
QTCEXPORT(bool,qtc_QGLColormap_isEmpty)(void* x0);
QTCEXPORT(void,qtc_QGLColormap_setEntry)(void* x0, int x1, void* x2);
QTCEXPORT(void,qtc_QGLColormap_setEntry1)(void* x0, int x1, unsigned int x2);
QTCEXPORT(int,qtc_QGLColormap_size)(void* x0);
QTCEXPORT(void,qtc_QGLColormap_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QGLColormap_getFinalizer)();
QTCEXPORT(void,qtc_QGLColormap_delete)(void* x0);
QTCEXPORT(void*,qtc_QGLContext)(void* x1);
QTCEXPORT(void*,qtc_QGLContext1)(void* x1, void* x2);
QTCEXPORT(void*,qtc_QGLContext1_widget)(void* x1, void* x2);
QTCEXPORT(unsigned int,qtc_QGLContext_bindTexture)(void* x0, void* x1);
QTCEXPORT(unsigned int,qtc_QGLContext_bindTexture1)(void* x0, void* x1);
QTCEXPORT(unsigned int,qtc_QGLContext_bindTexture2)(void* x0, wchar_t* x1);
QTCEXPORT(unsigned int,qtc_QGLContext_bindTexture3)(void* x0, void* x1, int x2);
QTCEXPORT(unsigned int,qtc_QGLContext_bindTexture4)(void* x0, void* x1, int x2);
QTCEXPORT(unsigned int,qtc_QGLContext_bindTexture5)(void* x0, void* x1, int x2, int x3);
QTCEXPORT(unsigned int,qtc_QGLContext_bindTexture6)(void* x0, void* x1, int x2, int x3);
QTCEXPORT(bool,qtc_QGLContext_chooseContext)(void* x0);
QTCEXPORT(bool,qtc_QGLContext_chooseContext_h)(void* x0);
QTCEXPORT(bool,qtc_QGLContext_chooseContext1)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QGLContext_chooseContext1_h)(void* x0, void* x1);
QTCEXPORT(unsigned int,qtc_QGLContext_colorIndex)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QGLContext_create)(void* x0);
QTCEXPORT(bool,qtc_QGLContext_create_h)(void* x0);
QTCEXPORT(bool,qtc_QGLContext_create1)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QGLContext_create1_h)(void* x0, void* x1);
QTCEXPORT(void*,qtc_QGLContext_currentContext)();
QTCEXPORT(void,qtc_QGLContext_deleteTexture)(void* x0, unsigned int x1);
QTCEXPORT(void*,qtc_QGLContext_device)(void* x0);
QTCEXPORT(bool,qtc_QGLContext_deviceIsPixmap)(void* x0);
QTCEXPORT(void,qtc_QGLContext_doneCurrent)(void* x0);
QTCEXPORT(void,qtc_QGLContext_doneCurrent_h)(void* x0);
QTCEXPORT(void*,qtc_QGLContext_format)(void* x0);
QTCEXPORT(void,qtc_QGLContext_generateFontDisplayLists)(void* x0, void* x1, int x2);
QTCEXPORT(void*,qtc_QGLContext_getProcAddress)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QGLContext_initialized)(void* x0);
QTCEXPORT(bool,qtc_QGLContext_isSharing)(void* x0);
QTCEXPORT(bool,qtc_QGLContext_isValid)(void* x0);
QTCEXPORT(void,qtc_QGLContext_makeCurrent)(void* x0);
QTCEXPORT(void,qtc_QGLContext_makeCurrent_h)(void* x0);
QTCEXPORT(void*,qtc_QGLContext_overlayTransparentColor)(void* x0);
QTCEXPORT(void*,qtc_QGLContext_requestedFormat)(void* x0);
QTCEXPORT(void,qtc_QGLContext_reset)(void* x0);
QTCEXPORT(void,qtc_QGLContext_setDevice)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLContext_setDevice_widget)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLContext_setFormat)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLContext_setInitialized)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLContext_setTextureCacheLimit)(int x1);
QTCEXPORT(void,qtc_QGLContext_setValid)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLContext_setWindowCreated)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLContext_swapBuffers)(void* x0);
QTCEXPORT(void,qtc_QGLContext_swapBuffers_h)(void* x0);
QTCEXPORT(int,qtc_QGLContext_textureCacheLimit)();
QTCEXPORT(bool,qtc_QGLContext_windowCreated)(void* x0);
QTCEXPORT(void,qtc_QGLContext_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QGLContext_getFinalizer)();
QTCEXPORT(void,qtc_QGLContext_finalizer1)(void* x0);
QTCEXPORT(void*,qtc_QGLContext_getFinalizer1)();
QTCEXPORT(void,qtc_QGLContext_delete)(void* x0);
QTCEXPORT(void,qtc_QGLContext_delete1)(void* x0);
QTCEXPORT(bool, qtc_QGLContext_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QGLContext_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLContext_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLContext_setHandler3)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QGLFormat)();
QTCEXPORT(void*,qtc_QGLFormat1)(void* x1);
QTCEXPORT(void*,qtc_QGLFormat2)(long x1);
QTCEXPORT(void*,qtc_QGLFormat3)(long x1, int x2);
QTCEXPORT(bool,qtc_QGLFormat_accum)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_accumBufferSize)(void* x0);
QTCEXPORT(bool,qtc_QGLFormat_alpha)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_alphaBufferSize)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_blueBufferSize)(void* x0);
QTCEXPORT(void*,qtc_QGLFormat_defaultFormat)();
QTCEXPORT(void*,qtc_QGLFormat_defaultOverlayFormat)();
QTCEXPORT(bool,qtc_QGLFormat_depth)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_depthBufferSize)(void* x0);
QTCEXPORT(bool,qtc_QGLFormat_directRendering)(void* x0);
QTCEXPORT(bool,qtc_QGLFormat_doubleBuffer)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_greenBufferSize)(void* x0);
QTCEXPORT(bool,qtc_QGLFormat_hasOpenGL)();
QTCEXPORT(bool,qtc_QGLFormat_hasOpenGLOverlays)();
QTCEXPORT(bool,qtc_QGLFormat_hasOverlay)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_plane)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_redBufferSize)(void* x0);
QTCEXPORT(bool,qtc_QGLFormat_rgba)(void* x0);
QTCEXPORT(bool,qtc_QGLFormat_sampleBuffers)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_samples)(void* x0);
QTCEXPORT(void,qtc_QGLFormat_setAccum)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setAccumBufferSize)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setAlpha)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setAlphaBufferSize)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setBlueBufferSize)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setDefaultFormat)(void* x1);
QTCEXPORT(void,qtc_QGLFormat_setDefaultOverlayFormat)(void* x1);
QTCEXPORT(void,qtc_QGLFormat_setDepth)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setDepthBufferSize)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setDirectRendering)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setDoubleBuffer)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setGreenBufferSize)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setOption)(void* x0, long x1);
QTCEXPORT(void,qtc_QGLFormat_setOverlay)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setPlane)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setRedBufferSize)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setRgba)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setSampleBuffers)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setSamples)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setStencil)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setStencilBufferSize)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLFormat_setStereo)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLFormat_setSwapInterval)(void* x0, int x1);
QTCEXPORT(bool,qtc_QGLFormat_stencil)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_stencilBufferSize)(void* x0);
QTCEXPORT(bool,qtc_QGLFormat_stereo)(void* x0);
QTCEXPORT(int,qtc_QGLFormat_swapInterval)(void* x0);
QTCEXPORT(bool,qtc_QGLFormat_testOption)(void* x0, long x1);
QTCEXPORT(void,qtc_QGLFormat_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QGLFormat_getFinalizer)();
QTCEXPORT(void,qtc_QGLFormat_delete)(void* x0);
QTCEXPORT(void*,qtc_QGLFramebufferObject)(void* x1);
QTCEXPORT(void*,qtc_QGLFramebufferObject1)(int x1_w, int x1_h);
QTCEXPORT(void*,qtc_QGLFramebufferObject2)(void* x1, int x2);
QTCEXPORT(void*,qtc_QGLFramebufferObject3)(int x1_w, int x1_h, int x2);
QTCEXPORT(void*,qtc_QGLFramebufferObject4)(void* x1, long x2);
QTCEXPORT(void*,qtc_QGLFramebufferObject5)(int x1_w, int x1_h, long x2);
QTCEXPORT(void*,qtc_QGLFramebufferObject6)(int x1, int x2);
QTCEXPORT(void*,qtc_QGLFramebufferObject7)(int x1, int x2, long x3);
QTCEXPORT(void*,qtc_QGLFramebufferObject8)(int x1, int x2, int x3);
QTCEXPORT(void*,qtc_QGLFramebufferObject9)(void* x1, long x2, int x3);
QTCEXPORT(void*,qtc_QGLFramebufferObject10)(int x1_w, int x1_h, long x2, int x3);
QTCEXPORT(void*,qtc_QGLFramebufferObject11)(void* x1, long x2, int x3, int x4);
QTCEXPORT(void*,qtc_QGLFramebufferObject12)(int x1_w, int x1_h, long x2, int x3, int x4);
QTCEXPORT(void*,qtc_QGLFramebufferObject13)(int x1, int x2, long x3, int x4);
QTCEXPORT(void*,qtc_QGLFramebufferObject14)(int x1, int x2, long x3, int x4, int x5);
QTCEXPORT(long,qtc_QGLFramebufferObject_attachment)(void* x0);
QTCEXPORT(bool,qtc_QGLFramebufferObject_bind)(void* x0);
QTCEXPORT(int,qtc_QGLFramebufferObject_devType)(void* x0);
QTCEXPORT(bool,qtc_QGLFramebufferObject_hasOpenGLFramebufferObjects)();
QTCEXPORT(bool,qtc_QGLFramebufferObject_isValid)(void* x0);
QTCEXPORT(int,qtc_QGLFramebufferObject_metric)(void* x0, long x1);
QTCEXPORT(void*,qtc_QGLFramebufferObject_paintEngine)(void* x0);
QTCEXPORT(void*,qtc_QGLFramebufferObject_paintEngine_h)(void* x0);
QTCEXPORT(bool,qtc_QGLFramebufferObject_release)(void* x0);
QTCEXPORT(void*,qtc_QGLFramebufferObject_size)(void* x0);
QTCEXPORT(void,qtc_QGLFramebufferObject_size_qth)(void* x0, int* _ret_w, int* _ret_h);
QTCEXPORT(unsigned int,qtc_QGLFramebufferObject_texture)(void* x0);
QTCEXPORT(void*,qtc_QGLFramebufferObject_toImage)(void* x0);
QTCEXPORT(void,qtc_QGLFramebufferObject_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QGLFramebufferObject_getFinalizer)();
QTCEXPORT(void,qtc_QGLFramebufferObject_finalizer1)(void* x0);
QTCEXPORT(void*,qtc_QGLFramebufferObject_getFinalizer1)();
QTCEXPORT(void,qtc_QGLFramebufferObject_delete)(void* x0);
QTCEXPORT(void,qtc_QGLFramebufferObject_delete1)(void* x0);
QTCEXPORT(bool, qtc_QGLFramebufferObject_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QGLFramebufferObject_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QGLPixelBuffer)(void* x1);
QTCEXPORT(void*,qtc_QGLPixelBuffer1)(int x1_w, int x1_h);
QTCEXPORT(void*,qtc_QGLPixelBuffer2)(void* x1, void* x2);
QTCEXPORT(void*,qtc_QGLPixelBuffer3)(int x1_w, int x1_h, void* x2);
QTCEXPORT(void*,qtc_QGLPixelBuffer4)(int x1, int x2);
QTCEXPORT(void*,qtc_QGLPixelBuffer5)(void* x1, void* x2, void* x3);
QTCEXPORT(void*,qtc_QGLPixelBuffer6)(int x1_w, int x1_h, void* x2, void* x3);
QTCEXPORT(void*,qtc_QGLPixelBuffer7)(int x1, int x2, void* x3);
QTCEXPORT(void*,qtc_QGLPixelBuffer8)(int x1, int x2, void* x3, void* x4);
QTCEXPORT(unsigned int,qtc_QGLPixelBuffer_bindTexture)(void* x0, wchar_t* x1);
QTCEXPORT(unsigned int,qtc_QGLPixelBuffer_bindTexture1)(void* x0, void* x1);
QTCEXPORT(unsigned int,qtc_QGLPixelBuffer_bindTexture2)(void* x0, void* x1);
QTCEXPORT(unsigned int,qtc_QGLPixelBuffer_bindTexture3)(void* x0, void* x1, int x2);
QTCEXPORT(unsigned int,qtc_QGLPixelBuffer_bindTexture4)(void* x0, void* x1, int x2);
QTCEXPORT(bool,qtc_QGLPixelBuffer_bindToDynamicTexture)(void* x0, unsigned int x1);
QTCEXPORT(void,qtc_QGLPixelBuffer_deleteTexture)(void* x0, unsigned int x1);
QTCEXPORT(int,qtc_QGLPixelBuffer_devType)(void* x0);
QTCEXPORT(bool,qtc_QGLPixelBuffer_doneCurrent)(void* x0);
QTCEXPORT(void*,qtc_QGLPixelBuffer_format)(void* x0);
QTCEXPORT(unsigned int,qtc_QGLPixelBuffer_generateDynamicTexture)(void* x0);
QTCEXPORT(bool,qtc_QGLPixelBuffer_hasOpenGLPbuffers)();
QTCEXPORT(bool,qtc_QGLPixelBuffer_isValid)(void* x0);
QTCEXPORT(bool,qtc_QGLPixelBuffer_makeCurrent)(void* x0);
QTCEXPORT(int,qtc_QGLPixelBuffer_metric)(void* x0, long x1);
QTCEXPORT(void*,qtc_QGLPixelBuffer_paintEngine)(void* x0);
QTCEXPORT(void*,qtc_QGLPixelBuffer_paintEngine_h)(void* x0);
QTCEXPORT(void,qtc_QGLPixelBuffer_releaseFromDynamicTexture)(void* x0);
QTCEXPORT(void*,qtc_QGLPixelBuffer_size)(void* x0);
QTCEXPORT(void,qtc_QGLPixelBuffer_size_qth)(void* x0, int* _ret_w, int* _ret_h);
QTCEXPORT(void*,qtc_QGLPixelBuffer_toImage)(void* x0);
QTCEXPORT(void,qtc_QGLPixelBuffer_updateDynamicTexture)(void* x0, unsigned int x1);
QTCEXPORT(void,qtc_QGLPixelBuffer_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QGLPixelBuffer_getFinalizer)();
QTCEXPORT(void,qtc_QGLPixelBuffer_finalizer1)(void* x0);
QTCEXPORT(void*,qtc_QGLPixelBuffer_getFinalizer1)();
QTCEXPORT(void,qtc_QGLPixelBuffer_delete)(void* x0);
QTCEXPORT(void,qtc_QGLPixelBuffer_delete1)(void* x0);
QTCEXPORT(bool, qtc_QGLPixelBuffer_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QGLPixelBuffer_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QGLWidget)();
QTCEXPORT(void*,qtc_QGLWidget1)(void* x1);
QTCEXPORT(void*,qtc_QGLWidget2)(void* x1);
QTCEXPORT(void*,qtc_QGLWidget3)(void* x1);
QTCEXPORT(void*,qtc_QGLWidget4)(void* x1, void* x2);
QTCEXPORT(void*,qtc_QGLWidget5)(void* x1, void* x2);
QTCEXPORT(void*,qtc_QGLWidget6)(void* x1, void* x2, long x3);
QTCEXPORT(void*,qtc_QGLWidget7)(void* x1, void* x2, void* x3, long x4);
QTCEXPORT(void*,qtc_QGLWidget8)(void* x1, void* x2, void* x3, long x4);
QTCEXPORT(bool,qtc_QGLWidget_autoBufferSwap)(void* x0);
QTCEXPORT(unsigned int,qtc_QGLWidget_bindTexture)(void* x0, wchar_t* x1);
QTCEXPORT(unsigned int,qtc_QGLWidget_bindTexture1)(void* x0, void* x1);
QTCEXPORT(unsigned int,qtc_QGLWidget_bindTexture2)(void* x0, void* x1);
QTCEXPORT(unsigned int,qtc_QGLWidget_bindTexture3)(void* x0, void* x1, int x2);
QTCEXPORT(unsigned int,qtc_QGLWidget_bindTexture4)(void* x0, void* x1, int x2);
QTCEXPORT(unsigned int,qtc_QGLWidget_bindTexture5)(void* x0, void* x1, int x2, int x3);
QTCEXPORT(unsigned int,qtc_QGLWidget_bindTexture6)(void* x0, void* x1, int x2, int x3);
QTCEXPORT(void*,qtc_QGLWidget_colormap)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_context)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_convertToGLFormat)(void* x1);
QTCEXPORT(void,qtc_QGLWidget_deleteTexture)(void* x0, unsigned int x1);
QTCEXPORT(void,qtc_QGLWidget_doneCurrent)(void* x0);
QTCEXPORT(bool,qtc_QGLWidget_doubleBuffer)(void* x0);
QTCEXPORT(bool,qtc_QGLWidget_event)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QGLWidget_event_h)(void* x0, void* x1);
QTCEXPORT(int,qtc_QGLWidget_fontDisplayListBase)(void* x0, void* x1);
QTCEXPORT(int,qtc_QGLWidget_fontDisplayListBase1)(void* x0, void* x1, int x2);
QTCEXPORT(void*,qtc_QGLWidget_format)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_glDraw)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_glDraw_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_glInit)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_glInit_h)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_grabFrameBuffer)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_grabFrameBuffer1)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_initializeGL)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_initializeGL_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_initializeOverlayGL)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_initializeOverlayGL_h)(void* x0);
QTCEXPORT(bool,qtc_QGLWidget_isSharing)(void* x0);
QTCEXPORT(bool,qtc_QGLWidget_isValid)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_makeCurrent)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_makeOverlayCurrent)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_overlayContext)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_paintEngine)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_paintEngine_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_paintEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_paintEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_paintGL)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_paintGL_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_paintOverlayGL)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_paintOverlayGL_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_qglClearColor)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_qglColor)(void* x0, void* x1);
QTCEXPORT(void*,qtc_QGLWidget_renderPixmap)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_renderPixmap1)(void* x0, int x1);
QTCEXPORT(void*,qtc_QGLWidget_renderPixmap2)(void* x0, int x1, int x2);
QTCEXPORT(void*,qtc_QGLWidget_renderPixmap3)(void* x0, int x1, int x2, bool x3);
QTCEXPORT(void,qtc_QGLWidget_renderText)(void* x0, int x1, int x2, wchar_t* x3);
QTCEXPORT(void,qtc_QGLWidget_renderText1)(void* x0, int x1, int x2, wchar_t* x3, void* x4);
QTCEXPORT(void,qtc_QGLWidget_renderText2)(void* x0, double x1, double x2, double x3, wchar_t* x4);
QTCEXPORT(void,qtc_QGLWidget_renderText3)(void* x0, double x1, double x2, double x3, wchar_t* x4, void* x5);
QTCEXPORT(void,qtc_QGLWidget_renderText4)(void* x0, int x1, int x2, wchar_t* x3, void* x4, int x5);
QTCEXPORT(void,qtc_QGLWidget_renderText5)(void* x0, double x1, double x2, double x3, wchar_t* x4, void* x5, int x6);
QTCEXPORT(void,qtc_QGLWidget_resizeEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_resizeEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_resizeGL)(void* x0, int x1, int x2);
QTCEXPORT(void,qtc_QGLWidget_resizeGL_h)(void* x0, int x1, int x2);
QTCEXPORT(void,qtc_QGLWidget_resizeOverlayGL)(void* x0, int x1, int x2);
QTCEXPORT(void,qtc_QGLWidget_resizeOverlayGL_h)(void* x0, int x1, int x2);
QTCEXPORT(void,qtc_QGLWidget_setAutoBufferSwap)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_setColormap)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_setContext)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_setContext1)(void* x0, void* x1, void* x2);
QTCEXPORT(void,qtc_QGLWidget_setContext2)(void* x0, void* x1, void* x2, bool x3);
QTCEXPORT(void,qtc_QGLWidget_setFormat)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_setMouseTracking)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_swapBuffers)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_updateGL)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_updateGL_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_updateOverlayGL)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_updateOverlayGL_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_getFinalizer)();
QTCEXPORT(void,qtc_QGLWidget_delete)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_deleteLater)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_actionEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_actionEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_addAction)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_changeEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_changeEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_closeEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_closeEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_contextMenuEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_contextMenuEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_create)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_create1)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_create2)(void* x0, void* x1, bool x2);
QTCEXPORT(void,qtc_QGLWidget_create3)(void* x0, void* x1, bool x2, bool x3);
QTCEXPORT(void,qtc_QGLWidget_destroy)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_destroy1)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_destroy2)(void* x0, bool x1, bool x2);
QTCEXPORT(int,qtc_QGLWidget_devType)(void* x0);
QTCEXPORT(int,qtc_QGLWidget_devType_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_dragEnterEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_dragEnterEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_dragLeaveEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_dragLeaveEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_dragMoveEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_dragMoveEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_dropEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_dropEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_enabledChange)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_enterEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_enterEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_focusInEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_focusInEvent_h)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QGLWidget_focusNextChild)(void* x0);
QTCEXPORT(bool,qtc_QGLWidget_focusNextPrevChild)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_focusOutEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_focusOutEvent_h)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QGLWidget_focusPreviousChild)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_fontChange)(void* x0, void* x1);
QTCEXPORT(int,qtc_QGLWidget_heightForWidth)(void* x0, int x1);
QTCEXPORT(int,qtc_QGLWidget_heightForWidth_h)(void* x0, int x1);
QTCEXPORT(void,qtc_QGLWidget_hideEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_hideEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_inputMethodEvent)(void* x0, void* x1);
QTCEXPORT(void*,qtc_QGLWidget_inputMethodQuery)(void* x0, long x1);
QTCEXPORT(void*,qtc_QGLWidget_inputMethodQuery_h)(void* x0, long x1);
QTCEXPORT(void,qtc_QGLWidget_keyPressEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_keyPressEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_keyReleaseEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_keyReleaseEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_languageChange)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_leaveEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_leaveEvent_h)(void* x0, void* x1);
QTCEXPORT(int,qtc_QGLWidget_metric)(void* x0, long x1);
QTCEXPORT(void*,qtc_QGLWidget_minimumSizeHint)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_minimumSizeHint_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_minimumSizeHint_qth)(void* x0, int* _ret_w, int* _ret_h);
QTCEXPORT(void,qtc_QGLWidget_minimumSizeHint_qth_h)(void* x0, int* _ret_w, int* _ret_h);
QTCEXPORT(void,qtc_QGLWidget_mouseDoubleClickEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_mouseDoubleClickEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_mouseMoveEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_mouseMoveEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_mousePressEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_mousePressEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_mouseReleaseEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_mouseReleaseEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_move)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_move_qth)(void* x0, int x1_x, int x1_y);
QTCEXPORT(void,qtc_QGLWidget_move1)(void* x0, int x1, int x2);
QTCEXPORT(void,qtc_QGLWidget_moveEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_moveEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_paletteChange)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_repaint)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_repaint1)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_repaint2)(void* x0, int x1, int x2, int x3, int x4);
QTCEXPORT(void,qtc_QGLWidget_resetInputContext)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_resize)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_resize_qth)(void* x0, int x1_w, int x1_h);
QTCEXPORT(void,qtc_QGLWidget_resize1)(void* x0, int x1, int x2);
QTCEXPORT(void,qtc_QGLWidget_setGeometry)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_setGeometry_qth)(void* x0, int x1_x, int x1_y, int x1_w, int x1_h);
QTCEXPORT(void,qtc_QGLWidget_setGeometry1)(void* x0, int x1, int x2, int x3, int x4);
QTCEXPORT(void,qtc_QGLWidget_setVisible)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_setVisible_h)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_showEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_showEvent_h)(void* x0, void* x1);
QTCEXPORT(void*,qtc_QGLWidget_sizeHint)(void* x0);
QTCEXPORT(void*,qtc_QGLWidget_sizeHint_h)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_sizeHint_qth)(void* x0, int* _ret_w, int* _ret_h);
QTCEXPORT(void,qtc_QGLWidget_sizeHint_qth_h)(void* x0, int* _ret_w, int* _ret_h);
QTCEXPORT(void,qtc_QGLWidget_tabletEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_tabletEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_updateMicroFocus)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_wheelEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_wheelEvent_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_windowActivationChange)(void* x0, bool x1);
QTCEXPORT(void,qtc_QGLWidget_childEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_connectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QGLWidget_customEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QGLWidget_disconnectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QGLWidget_eventFilter)(void* x0, void* x1, void* x2);
QTCEXPORT(bool,qtc_QGLWidget_eventFilter_h)(void* x0, void* x1, void* x2);
QTCEXPORT(int,qtc_QGLWidget_receivers)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QGLWidget_sender)(void* x0);
QTCEXPORT(void,qtc_QGLWidget_timerEvent)(void* x0, void* x1);
QTCEXPORT(bool, qtc_QGLWidget_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QGLWidget_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler3)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler4)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler5)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler6)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler7)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler8)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler9)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler10)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QGLWidget_setHandler11)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
