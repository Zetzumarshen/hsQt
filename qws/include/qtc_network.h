/////////////////////////////////////////////////////////////////////////////
//      
//      File      : qtc_network.h
//      Copyright : (c) David Harley 2010
//      Project   : qtHaskell
//      Version   : 1.1.4
//      Modified  : 2010-09-02 17:01:52
//      
//      Warning   : this file is machine generated - do not modify.
//      
/////////////////////////////////////////////////////////////////////////////

QTCEXPORT(void*,qtc_QAbstractSocket)(long x1, void* x2);
QTCEXPORT(void,qtc_QAbstractSocket_abort)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_atEnd)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_atEnd_h)(void* x0);
QTCEXPORT(long long int,qtc_QAbstractSocket_bytesAvailable)(void* x0);
QTCEXPORT(long long int,qtc_QAbstractSocket_bytesAvailable_h)(void* x0);
QTCEXPORT(long long int,qtc_QAbstractSocket_bytesToWrite)(void* x0);
QTCEXPORT(long long int,qtc_QAbstractSocket_bytesToWrite_h)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_canReadLine)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_canReadLine_h)(void* x0);
QTCEXPORT(void,qtc_QAbstractSocket_close)(void* x0);
QTCEXPORT(void,qtc_QAbstractSocket_close_h)(void* x0);
QTCEXPORT(void,qtc_QAbstractSocket_connectToHost)(void* x0, void* x1, unsigned short x2);
QTCEXPORT(void,qtc_QAbstractSocket_connectToHost1)(void* x0, wchar_t* x1, unsigned short x2);
QTCEXPORT(void,qtc_QAbstractSocket_connectToHost2)(void* x0, void* x1, unsigned short x2, long x3);
QTCEXPORT(void,qtc_QAbstractSocket_connectToHost3)(void* x0, wchar_t* x1, unsigned short x2, long x3);
QTCEXPORT(void,qtc_QAbstractSocket_connectToHostImplementation)(void* x0, wchar_t* x1, unsigned short x2);
QTCEXPORT(void,qtc_QAbstractSocket_connectToHostImplementation1)(void* x0, wchar_t* x1, unsigned short x2, long x3);
QTCEXPORT(void,qtc_QAbstractSocket_disconnectFromHost)(void* x0);
QTCEXPORT(void,qtc_QAbstractSocket_disconnectFromHostImplementation)(void* x0);
QTCEXPORT(long,qtc_QAbstractSocket_error)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_flush)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_isSequential)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_isSequential_h)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_isValid)(void* x0);
QTCEXPORT(void*,qtc_QAbstractSocket_localAddress)(void* x0);
QTCEXPORT(unsigned short,qtc_QAbstractSocket_localPort)(void* x0);
QTCEXPORT(void*,qtc_QAbstractSocket_peerAddress)(void* x0);
QTCEXPORT(void*,qtc_QAbstractSocket_peerName)(void* x0);
QTCEXPORT(unsigned short,qtc_QAbstractSocket_peerPort)(void* x0);
QTCEXPORT(void*,qtc_QAbstractSocket_proxy)(void* x0);
QTCEXPORT(long long int,qtc_QAbstractSocket_readBufferSize)(void* x0);
QTCEXPORT(void,qtc_QAbstractSocket_setLocalAddress)(void* x0, void* x1);
QTCEXPORT(void,qtc_QAbstractSocket_setLocalPort)(void* x0, unsigned short x1);
QTCEXPORT(void,qtc_QAbstractSocket_setPeerAddress)(void* x0, void* x1);
QTCEXPORT(void,qtc_QAbstractSocket_setPeerName)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QAbstractSocket_setPeerPort)(void* x0, unsigned short x1);
QTCEXPORT(void,qtc_QAbstractSocket_setProxy)(void* x0, void* x1);
QTCEXPORT(void,qtc_QAbstractSocket_setReadBufferSize)(void* x0, long long int x1);
QTCEXPORT(bool,qtc_QAbstractSocket_setSocketDescriptor)(void* x0, int x1);
QTCEXPORT(bool,qtc_QAbstractSocket_setSocketDescriptor1)(void* x0, int x1, long x2);
QTCEXPORT(bool,qtc_QAbstractSocket_setSocketDescriptor2)(void* x0, int x1, long x2, long x3);
QTCEXPORT(void,qtc_QAbstractSocket_setSocketError)(void* x0, long x1);
QTCEXPORT(void,qtc_QAbstractSocket_setSocketState)(void* x0, long x1);
QTCEXPORT(int,qtc_QAbstractSocket_socketDescriptor)(void* x0);
QTCEXPORT(long,qtc_QAbstractSocket_socketType)(void* x0);
QTCEXPORT(long,qtc_QAbstractSocket_state)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForBytesWritten)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForBytesWritten_h)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForBytesWritten1)(void* x0, int x1);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForBytesWritten1_h)(void* x0, int x1);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForConnected)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForConnected1)(void* x0, int x1);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForDisconnected)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForDisconnected1)(void* x0, int x1);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForReadyRead)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForReadyRead_h)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForReadyRead1)(void* x0, int x1);
QTCEXPORT(bool,qtc_QAbstractSocket_waitForReadyRead1_h)(void* x0, int x1);
QTCEXPORT(long long int,qtc_QAbstractSocket_writeData)(void* x0, wchar_t* x1, long long int x2);
QTCEXPORT(void,qtc_QAbstractSocket_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QAbstractSocket_getFinalizer)();
QTCEXPORT(void,qtc_QAbstractSocket_delete)(void* x0);
QTCEXPORT(void,qtc_QAbstractSocket_deleteLater)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_open)(void* x0, long x1);
QTCEXPORT(bool,qtc_QAbstractSocket_open_h)(void* x0, long x1);
QTCEXPORT(long long int,qtc_QAbstractSocket_pos)(void* x0);
QTCEXPORT(long long int,qtc_QAbstractSocket_pos_h)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_reset)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_reset_h)(void* x0);
QTCEXPORT(bool,qtc_QAbstractSocket_seek)(void* x0, long long int x1);
QTCEXPORT(bool,qtc_QAbstractSocket_seek_h)(void* x0, long long int x1);
QTCEXPORT(void,qtc_QAbstractSocket_setErrorString)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QAbstractSocket_setOpenMode)(void* x0, long x1);
QTCEXPORT(long long int,qtc_QAbstractSocket_size)(void* x0);
QTCEXPORT(long long int,qtc_QAbstractSocket_size_h)(void* x0);
QTCEXPORT(void,qtc_QAbstractSocket_childEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QAbstractSocket_connectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QAbstractSocket_customEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QAbstractSocket_disconnectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QAbstractSocket_event)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QAbstractSocket_event_h)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QAbstractSocket_eventFilter)(void* x0, void* x1, void* x2);
QTCEXPORT(bool,qtc_QAbstractSocket_eventFilter_h)(void* x0, void* x1, void* x2);
QTCEXPORT(int,qtc_QAbstractSocket_receivers)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QAbstractSocket_sender)(void* x0);
QTCEXPORT(void,qtc_QAbstractSocket_timerEvent)(void* x0, void* x1);
QTCEXPORT(bool, qtc_QAbstractSocket_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QAbstractSocket_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QAbstractSocket_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QAbstractSocket_setHandler3)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QAbstractSocket_setHandler4)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QAbstractSocket_setHandler5)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QAbstractSocket_setHandler6)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QAbstractSocket_setHandler7)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QFtp)();
QTCEXPORT(void*,qtc_QFtp1)(void* x1);
QTCEXPORT(void,qtc_QFtp_abort)(void* x0);
QTCEXPORT(long long int,qtc_QFtp_bytesAvailable)(void* x0);
QTCEXPORT(int,qtc_QFtp_cd)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QFtp_clearPendingCommands)(void* x0);
QTCEXPORT(int,qtc_QFtp_close)(void* x0);
QTCEXPORT(int,qtc_QFtp_connectToHost)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QFtp_connectToHost1)(void* x0, wchar_t* x1, unsigned short x2);
QTCEXPORT(long,qtc_QFtp_currentCommand)(void* x0);
QTCEXPORT(void*,qtc_QFtp_currentDevice)(void* x0);
QTCEXPORT(int,qtc_QFtp_currentId)(void* x0);
QTCEXPORT(long,qtc_QFtp_error)(void* x0);
QTCEXPORT(void*,qtc_QFtp_errorString)(void* x0);
QTCEXPORT(int,qtc_QFtp_get)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QFtp_get1)(void* x0, wchar_t* x1, void* x2);
QTCEXPORT(int,qtc_QFtp_get2)(void* x0, wchar_t* x1, void* x2, long x3);
QTCEXPORT(bool,qtc_QFtp_hasPendingCommands)(void* x0);
QTCEXPORT(int,qtc_QFtp_list)(void* x0);
QTCEXPORT(int,qtc_QFtp_list1)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QFtp_login)(void* x0);
QTCEXPORT(int,qtc_QFtp_login1)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QFtp_login2)(void* x0, wchar_t* x1, wchar_t* x2);
QTCEXPORT(int,qtc_QFtp_mkdir)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QFtp_put)(void* x0, wchar_t* x1, wchar_t* x2);
QTCEXPORT(int,qtc_QFtp_put1)(void* x0, void* x1, wchar_t* x2);
QTCEXPORT(int,qtc_QFtp_put2)(void* x0, void* x1, wchar_t* x2, long x3);
QTCEXPORT(int,qtc_QFtp_put3)(void* x0, wchar_t* x1, wchar_t* x2, long x3);
QTCEXPORT(int,qtc_QFtp_rawCommand)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QFtp_readAll)(void* x0);
QTCEXPORT(int,qtc_QFtp_remove)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QFtp_rename)(void* x0, wchar_t* x1, wchar_t* x2);
QTCEXPORT(int,qtc_QFtp_rmdir)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QFtp_setProxy)(void* x0, wchar_t* x1, unsigned short x2);
QTCEXPORT(int,qtc_QFtp_setTransferMode)(void* x0, long x1);
QTCEXPORT(long,qtc_QFtp_state)(void* x0);
QTCEXPORT(void,qtc_QFtp_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QFtp_getFinalizer)();
QTCEXPORT(void,qtc_QFtp_delete)(void* x0);
QTCEXPORT(void,qtc_QFtp_deleteLater)(void* x0);
QTCEXPORT(void,qtc_QFtp_childEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QFtp_connectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QFtp_customEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QFtp_disconnectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QFtp_event)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QFtp_event_h)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QFtp_eventFilter)(void* x0, void* x1, void* x2);
QTCEXPORT(bool,qtc_QFtp_eventFilter_h)(void* x0, void* x1, void* x2);
QTCEXPORT(int,qtc_QFtp_receivers)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QFtp_sender)(void* x0);
QTCEXPORT(void,qtc_QFtp_timerEvent)(void* x0, void* x1);
QTCEXPORT(bool, qtc_QFtp_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QFtp_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QFtp_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QHostAddress)();
QTCEXPORT(void*,qtc_QHostAddress1)(long x1);
QTCEXPORT(void*,qtc_QHostAddress2)(unsigned int x1);
QTCEXPORT(void*,qtc_QHostAddress3)(wchar_t* x1);
QTCEXPORT(void*,qtc_QHostAddress4)(void* x1);
QTCEXPORT(void,qtc_QHostAddress_clear)(void* x0);
QTCEXPORT(bool,qtc_QHostAddress_isNull)(void* x0);
QTCEXPORT(long,qtc_QHostAddress_protocol)(void* x0);
QTCEXPORT(void*,qtc_QHostAddress_scopeId)(void* x0);
QTCEXPORT(void,qtc_QHostAddress_setAddress)(void* x0, unsigned int x1);
QTCEXPORT(bool,qtc_QHostAddress_setAddress1)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHostAddress_setScopeId)(void* x0, wchar_t* x1);
QTCEXPORT(unsigned int,qtc_QHostAddress_toIPv4Address)(void* x0);
QTCEXPORT(void*,qtc_QHostAddress_toIPv6Address)(void* x0);
QTCEXPORT(void*,qtc_QHostAddress_toString)(void* x0);
QTCEXPORT(void,qtc_QHostAddress_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QHostAddress_getFinalizer)();
QTCEXPORT(void,qtc_QHostAddress_delete)(void* x0);
QTCEXPORT(void*,qtc_QHostInfo)();
QTCEXPORT(void*,qtc_QHostInfo1)(void* x1);
QTCEXPORT(void*,qtc_QHostInfo2)(int x1);
QTCEXPORT(void,qtc_QHostInfo_abortHostLookup)(int x1);
QTCEXPORT(int,qtc_QHostInfo_addresses)(void* x0, void* _ref);
QTCEXPORT(long,qtc_QHostInfo_error)(void* x0);
QTCEXPORT(void*,qtc_QHostInfo_errorString)(void* x0);
QTCEXPORT(void*,qtc_QHostInfo_fromName)(wchar_t* x1);
QTCEXPORT(void*,qtc_QHostInfo_hostName)(void* x0);
QTCEXPORT(void*,qtc_QHostInfo_localHostName)();
QTCEXPORT(int,qtc_QHostInfo_lookupHost)(wchar_t* x1, void* x2, wchar_t* x3);
QTCEXPORT(int,qtc_QHostInfo_lookupId)(void* x0);
QTCEXPORT(void,qtc_QHostInfo_setError)(void* x0, long x1);
QTCEXPORT(void,qtc_QHostInfo_setErrorString)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHostInfo_setHostName)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHostInfo_setLookupId)(void* x0, int x1);
QTCEXPORT(void,qtc_QHostInfo_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QHostInfo_getFinalizer)();
QTCEXPORT(void,qtc_QHostInfo_delete)(void* x0);
QTCEXPORT(void*,qtc_QHttpHeader)();
QTCEXPORT(void*,qtc_QHttpHeader1)(void* x1);
QTCEXPORT(void*,qtc_QHttpHeader2)(wchar_t* x1);
QTCEXPORT(void,qtc_QHttpHeader_addValue)(void* x0, wchar_t* x1, wchar_t* x2);
QTCEXPORT(int,qtc_QHttpHeader_allValues)(void* x0, wchar_t* x1, void* _ref);
QTCEXPORT(unsigned int,qtc_QHttpHeader_contentLength)(void* x0);
QTCEXPORT(void*,qtc_QHttpHeader_contentType)(void* x0);
QTCEXPORT(bool,qtc_QHttpHeader_hasContentLength)(void* x0);
QTCEXPORT(bool,qtc_QHttpHeader_hasContentType)(void* x0);
QTCEXPORT(bool,qtc_QHttpHeader_hasKey)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QHttpHeader_isValid)(void* x0);
QTCEXPORT(int,qtc_QHttpHeader_keys)(void* x0, void* _ref);
QTCEXPORT(int,qtc_QHttpHeader_majorVersion)(void* x0);
QTCEXPORT(int,qtc_QHttpHeader_majorVersion_h)(void* x0);
QTCEXPORT(int,qtc_QHttpHeader_minorVersion)(void* x0);
QTCEXPORT(int,qtc_QHttpHeader_minorVersion_h)(void* x0);
QTCEXPORT(bool,qtc_QHttpHeader_parse)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QHttpHeader_parseLine)(void* x0, wchar_t* x1, int x2);
QTCEXPORT(void,qtc_QHttpHeader_removeAllValues)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHttpHeader_removeValue)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHttpHeader_setContentLength)(void* x0, int x1);
QTCEXPORT(void,qtc_QHttpHeader_setContentType)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHttpHeader_setValid)(void* x0, bool x1);
QTCEXPORT(void,qtc_QHttpHeader_setValue)(void* x0, wchar_t* x1, wchar_t* x2);
QTCEXPORT(void*,qtc_QHttpHeader_toString)(void* x0);
QTCEXPORT(void*,qtc_QHttpHeader_toString_h)(void* x0);
QTCEXPORT(void*,qtc_QHttpHeader_value)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHttpHeader_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QHttpHeader_getFinalizer)();
QTCEXPORT(void,qtc_QHttpHeader_finalizer1)(void* x0);
QTCEXPORT(void*,qtc_QHttpHeader_getFinalizer1)();
QTCEXPORT(void,qtc_QHttpHeader_delete)(void* x0);
QTCEXPORT(void,qtc_QHttpHeader_delete1)(void* x0);
QTCEXPORT(bool, qtc_QHttpHeader_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QHttpHeader_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QHttpHeader_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QHttp)();
QTCEXPORT(void*,qtc_QHttp1)(wchar_t* x1);
QTCEXPORT(void*,qtc_QHttp2)(void* x1);
QTCEXPORT(void*,qtc_QHttp3)(wchar_t* x1, unsigned short x2);
QTCEXPORT(void*,qtc_QHttp4)(wchar_t* x1, long x2);
QTCEXPORT(void*,qtc_QHttp5)(wchar_t* x1, long x2, unsigned short x3);
QTCEXPORT(void*,qtc_QHttp6)(wchar_t* x1, unsigned short x2, void* x3);
QTCEXPORT(void*,qtc_QHttp7)(wchar_t* x1, long x2, unsigned short x3, void* x4);
QTCEXPORT(void,qtc_QHttp_abort)(void* x0);
QTCEXPORT(long long int,qtc_QHttp_bytesAvailable)(void* x0);
QTCEXPORT(void,qtc_QHttp_clearPendingRequests)(void* x0);
QTCEXPORT(int,qtc_QHttp_close)(void* x0);
QTCEXPORT(int,qtc_QHttp_closeConnection)(void* x0);
QTCEXPORT(void*,qtc_QHttp_currentDestinationDevice)(void* x0);
QTCEXPORT(int,qtc_QHttp_currentId)(void* x0);
QTCEXPORT(void*,qtc_QHttp_currentRequest)(void* x0);
QTCEXPORT(void*,qtc_QHttp_currentSourceDevice)(void* x0);
QTCEXPORT(long,qtc_QHttp_error)(void* x0);
QTCEXPORT(void*,qtc_QHttp_errorString)(void* x0);
QTCEXPORT(int,qtc_QHttp_get)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QHttp_get1)(void* x0, wchar_t* x1, void* x2);
QTCEXPORT(bool,qtc_QHttp_hasPendingRequests)(void* x0);
QTCEXPORT(int,qtc_QHttp_head)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QHttp_lastResponse)(void* x0);
QTCEXPORT(int,qtc_QHttp_post)(void* x0, wchar_t* x1, wchar_t* x2);
QTCEXPORT(int,qtc_QHttp_post1)(void* x0, wchar_t* x1, void* x2);
QTCEXPORT(int,qtc_QHttp_post2)(void* x0, wchar_t* x1, wchar_t* x2, void* x3);
QTCEXPORT(int,qtc_QHttp_post3)(void* x0, wchar_t* x1, void* x2, void* x3);
QTCEXPORT(void*,qtc_QHttp_readAll)(void* x0);
QTCEXPORT(int,qtc_QHttp_request)(void* x0, void* x1);
QTCEXPORT(int,qtc_QHttp_request1)(void* x0, void* x1, wchar_t* x2);
QTCEXPORT(int,qtc_QHttp_request2)(void* x0, void* x1, void* x2);
QTCEXPORT(int,qtc_QHttp_request3)(void* x0, void* x1, wchar_t* x2, void* x3);
QTCEXPORT(int,qtc_QHttp_request4)(void* x0, void* x1, void* x2, void* x3);
QTCEXPORT(int,qtc_QHttp_setHost)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QHttp_setHost1)(void* x0, wchar_t* x1, unsigned short x2);
QTCEXPORT(int,qtc_QHttp_setHost2)(void* x0, wchar_t* x1, long x2);
QTCEXPORT(int,qtc_QHttp_setHost3)(void* x0, wchar_t* x1, long x2, unsigned short x3);
QTCEXPORT(int,qtc_QHttp_setProxy)(void* x0, void* x1);
QTCEXPORT(int,qtc_QHttp_setProxy1)(void* x0, wchar_t* x1, int x2);
QTCEXPORT(int,qtc_QHttp_setProxy2)(void* x0, wchar_t* x1, int x2, wchar_t* x3);
QTCEXPORT(int,qtc_QHttp_setProxy3)(void* x0, wchar_t* x1, int x2, wchar_t* x3, wchar_t* x4);
QTCEXPORT(int,qtc_QHttp_setSocket)(void* x0, void* x1);
QTCEXPORT(int,qtc_QHttp_setUser)(void* x0, wchar_t* x1);
QTCEXPORT(int,qtc_QHttp_setUser1)(void* x0, wchar_t* x1, wchar_t* x2);
QTCEXPORT(long,qtc_QHttp_state)(void* x0);
QTCEXPORT(void,qtc_QHttp_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QHttp_getFinalizer)();
QTCEXPORT(void,qtc_QHttp_delete)(void* x0);
QTCEXPORT(void,qtc_QHttp_deleteLater)(void* x0);
QTCEXPORT(void,qtc_QHttp_childEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QHttp_connectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHttp_customEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QHttp_disconnectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QHttp_event)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QHttp_event_h)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QHttp_eventFilter)(void* x0, void* x1, void* x2);
QTCEXPORT(bool,qtc_QHttp_eventFilter_h)(void* x0, void* x1, void* x2);
QTCEXPORT(int,qtc_QHttp_receivers)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QHttp_sender)(void* x0);
QTCEXPORT(void,qtc_QHttp_timerEvent)(void* x0, void* x1);
QTCEXPORT(bool, qtc_QHttp_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QHttp_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QHttp_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QHttpRequestHeader)();
QTCEXPORT(void*,qtc_QHttpRequestHeader1)(void* x1);
QTCEXPORT(void*,qtc_QHttpRequestHeader2)(wchar_t* x1);
QTCEXPORT(void*,qtc_QHttpRequestHeader3)(wchar_t* x1, wchar_t* x2);
QTCEXPORT(void*,qtc_QHttpRequestHeader4)(wchar_t* x1, wchar_t* x2, int x3);
QTCEXPORT(void*,qtc_QHttpRequestHeader5)(wchar_t* x1, wchar_t* x2, int x3, int x4);
QTCEXPORT(int,qtc_QHttpRequestHeader_majorVersion)(void* x0);
QTCEXPORT(int,qtc_QHttpRequestHeader_majorVersion_h)(void* x0);
QTCEXPORT(void*,qtc_QHttpRequestHeader_method)(void* x0);
QTCEXPORT(int,qtc_QHttpRequestHeader_minorVersion)(void* x0);
QTCEXPORT(int,qtc_QHttpRequestHeader_minorVersion_h)(void* x0);
QTCEXPORT(bool,qtc_QHttpRequestHeader_parseLine)(void* x0, wchar_t* x1, int x2);
QTCEXPORT(void*,qtc_QHttpRequestHeader_path)(void* x0);
QTCEXPORT(void,qtc_QHttpRequestHeader_setRequest)(void* x0, wchar_t* x1, wchar_t* x2);
QTCEXPORT(void,qtc_QHttpRequestHeader_setRequest1)(void* x0, wchar_t* x1, wchar_t* x2, int x3);
QTCEXPORT(void,qtc_QHttpRequestHeader_setRequest2)(void* x0, wchar_t* x1, wchar_t* x2, int x3, int x4);
QTCEXPORT(void*,qtc_QHttpRequestHeader_toString)(void* x0);
QTCEXPORT(void*,qtc_QHttpRequestHeader_toString_h)(void* x0);
QTCEXPORT(void,qtc_QHttpRequestHeader_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QHttpRequestHeader_getFinalizer)();
QTCEXPORT(void,qtc_QHttpRequestHeader_finalizer1)(void* x0);
QTCEXPORT(void*,qtc_QHttpRequestHeader_getFinalizer1)();
QTCEXPORT(void,qtc_QHttpRequestHeader_delete)(void* x0);
QTCEXPORT(void,qtc_QHttpRequestHeader_delete1)(void* x0);
QTCEXPORT(bool,qtc_QHttpRequestHeader_isValid)(void* x0);
QTCEXPORT(bool,qtc_QHttpRequestHeader_parse)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHttpRequestHeader_setValid)(void* x0, bool x1);
QTCEXPORT(bool, qtc_QHttpRequestHeader_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QHttpRequestHeader_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QHttpRequestHeader_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QHttpResponseHeader)();
QTCEXPORT(void*,qtc_QHttpResponseHeader1)(void* x1);
QTCEXPORT(void*,qtc_QHttpResponseHeader2)(wchar_t* x1);
QTCEXPORT(void*,qtc_QHttpResponseHeader3)(int x1);
QTCEXPORT(void*,qtc_QHttpResponseHeader4)(int x1, wchar_t* x2);
QTCEXPORT(void*,qtc_QHttpResponseHeader5)(int x1, wchar_t* x2, int x3);
QTCEXPORT(void*,qtc_QHttpResponseHeader6)(int x1, wchar_t* x2, int x3, int x4);
QTCEXPORT(int,qtc_QHttpResponseHeader_majorVersion)(void* x0);
QTCEXPORT(int,qtc_QHttpResponseHeader_majorVersion_h)(void* x0);
QTCEXPORT(int,qtc_QHttpResponseHeader_minorVersion)(void* x0);
QTCEXPORT(int,qtc_QHttpResponseHeader_minorVersion_h)(void* x0);
QTCEXPORT(bool,qtc_QHttpResponseHeader_parseLine)(void* x0, wchar_t* x1, int x2);
QTCEXPORT(void*,qtc_QHttpResponseHeader_reasonPhrase)(void* x0);
QTCEXPORT(void,qtc_QHttpResponseHeader_setStatusLine)(void* x0, int x1);
QTCEXPORT(void,qtc_QHttpResponseHeader_setStatusLine1)(void* x0, int x1, wchar_t* x2);
QTCEXPORT(void,qtc_QHttpResponseHeader_setStatusLine2)(void* x0, int x1, wchar_t* x2, int x3);
QTCEXPORT(void,qtc_QHttpResponseHeader_setStatusLine3)(void* x0, int x1, wchar_t* x2, int x3, int x4);
QTCEXPORT(int,qtc_QHttpResponseHeader_statusCode)(void* x0);
QTCEXPORT(void*,qtc_QHttpResponseHeader_toString)(void* x0);
QTCEXPORT(void*,qtc_QHttpResponseHeader_toString_h)(void* x0);
QTCEXPORT(void,qtc_QHttpResponseHeader_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QHttpResponseHeader_getFinalizer)();
QTCEXPORT(void,qtc_QHttpResponseHeader_finalizer1)(void* x0);
QTCEXPORT(void*,qtc_QHttpResponseHeader_getFinalizer1)();
QTCEXPORT(void,qtc_QHttpResponseHeader_delete)(void* x0);
QTCEXPORT(void,qtc_QHttpResponseHeader_delete1)(void* x0);
QTCEXPORT(bool,qtc_QHttpResponseHeader_isValid)(void* x0);
QTCEXPORT(bool,qtc_QHttpResponseHeader_parse)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QHttpResponseHeader_setValid)(void* x0, bool x1);
QTCEXPORT(bool, qtc_QHttpResponseHeader_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QHttpResponseHeader_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QHttpResponseHeader_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QNetworkAddressEntry)();
QTCEXPORT(void*,qtc_QNetworkAddressEntry1)(void* x1);
QTCEXPORT(void*,qtc_QNetworkAddressEntry_broadcast)(void* x0);
QTCEXPORT(void*,qtc_QNetworkAddressEntry_ip)(void* x0);
QTCEXPORT(void*,qtc_QNetworkAddressEntry_netmask)(void* x0);
QTCEXPORT(void,qtc_QNetworkAddressEntry_setBroadcast)(void* x0, void* x1);
QTCEXPORT(void,qtc_QNetworkAddressEntry_setIp)(void* x0, void* x1);
QTCEXPORT(void,qtc_QNetworkAddressEntry_setNetmask)(void* x0, void* x1);
QTCEXPORT(void,qtc_QNetworkAddressEntry_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QNetworkAddressEntry_getFinalizer)();
QTCEXPORT(void,qtc_QNetworkAddressEntry_delete)(void* x0);
QTCEXPORT(void*,qtc_QNetworkInterface)();
QTCEXPORT(void*,qtc_QNetworkInterface1)(void* x1);
QTCEXPORT(int,qtc_QNetworkInterface_addressEntries)(void* x0, void* _ref);
QTCEXPORT(int,qtc_QNetworkInterface_allAddresses)(void* _ref);
QTCEXPORT(int,qtc_QNetworkInterface_allInterfaces)(void* _ref);
QTCEXPORT(long,qtc_QNetworkInterface_flags)(void* x0);
QTCEXPORT(void*,qtc_QNetworkInterface_hardwareAddress)(void* x0);
QTCEXPORT(void*,qtc_QNetworkInterface_interfaceFromIndex)(int x1);
QTCEXPORT(void*,qtc_QNetworkInterface_interfaceFromName)(wchar_t* x1);
QTCEXPORT(bool,qtc_QNetworkInterface_isValid)(void* x0);
QTCEXPORT(void*,qtc_QNetworkInterface_name)(void* x0);
QTCEXPORT(void,qtc_QNetworkInterface_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QNetworkInterface_getFinalizer)();
QTCEXPORT(void,qtc_QNetworkInterface_delete)(void* x0);
QTCEXPORT(void*,qtc_QNetworkProxy)();
QTCEXPORT(void*,qtc_QNetworkProxy1)(void* x1);
QTCEXPORT(void*,qtc_QNetworkProxy2)(long x1);
QTCEXPORT(void*,qtc_QNetworkProxy3)(long x1, wchar_t* x2);
QTCEXPORT(void*,qtc_QNetworkProxy4)(long x1, wchar_t* x2, unsigned short x3);
QTCEXPORT(void*,qtc_QNetworkProxy5)(long x1, wchar_t* x2, unsigned short x3, wchar_t* x4);
QTCEXPORT(void*,qtc_QNetworkProxy6)(long x1, wchar_t* x2, unsigned short x3, wchar_t* x4, wchar_t* x5);
QTCEXPORT(void*,qtc_QNetworkProxy_applicationProxy)();
QTCEXPORT(void*,qtc_QNetworkProxy_hostName)(void* x0);
QTCEXPORT(void*,qtc_QNetworkProxy_password)(void* x0);
QTCEXPORT(unsigned short,qtc_QNetworkProxy_port)(void* x0);
QTCEXPORT(void,qtc_QNetworkProxy_setApplicationProxy)(void* x1);
QTCEXPORT(void,qtc_QNetworkProxy_setHostName)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QNetworkProxy_setPassword)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QNetworkProxy_setPort)(void* x0, unsigned short x1);
QTCEXPORT(void,qtc_QNetworkProxy_setType)(void* x0, long x1);
QTCEXPORT(void,qtc_QNetworkProxy_setUser)(void* x0, wchar_t* x1);
QTCEXPORT(long,qtc_QNetworkProxy_type)(void* x0);
QTCEXPORT(void*,qtc_QNetworkProxy_user)(void* x0);
QTCEXPORT(void,qtc_QNetworkProxy_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QNetworkProxy_getFinalizer)();
QTCEXPORT(void,qtc_QNetworkProxy_delete)(void* x0);
QTCEXPORT(void*,qtc_QTcpServer)();
QTCEXPORT(void*,qtc_QTcpServer1)(void* x1);
QTCEXPORT(void,qtc_QTcpServer_close)(void* x0);
QTCEXPORT(void*,qtc_QTcpServer_errorString)(void* x0);
QTCEXPORT(bool,qtc_QTcpServer_hasPendingConnections)(void* x0);
QTCEXPORT(bool,qtc_QTcpServer_hasPendingConnections_h)(void* x0);
QTCEXPORT(void,qtc_QTcpServer_incomingConnection)(void* x0, int x1);
QTCEXPORT(bool,qtc_QTcpServer_isListening)(void* x0);
QTCEXPORT(bool,qtc_QTcpServer_listen)(void* x0);
QTCEXPORT(bool,qtc_QTcpServer_listen1)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QTcpServer_listen2)(void* x0, void* x1, unsigned short x2);
QTCEXPORT(int,qtc_QTcpServer_maxPendingConnections)(void* x0);
QTCEXPORT(void*,qtc_QTcpServer_nextPendingConnection)(void* x0);
QTCEXPORT(void*,qtc_QTcpServer_nextPendingConnection_h)(void* x0);
QTCEXPORT(void*,qtc_QTcpServer_proxy)(void* x0);
QTCEXPORT(void*,qtc_QTcpServer_serverAddress)(void* x0);
QTCEXPORT(long,qtc_QTcpServer_serverError)(void* x0);
QTCEXPORT(unsigned short,qtc_QTcpServer_serverPort)(void* x0);
QTCEXPORT(void,qtc_QTcpServer_setMaxPendingConnections)(void* x0, int x1);
QTCEXPORT(void,qtc_QTcpServer_setProxy)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QTcpServer_setSocketDescriptor)(void* x0, int x1);
QTCEXPORT(int,qtc_QTcpServer_socketDescriptor)(void* x0);
QTCEXPORT(bool,qtc_QTcpServer_waitForNewConnection)(void* x0);
QTCEXPORT(bool,qtc_QTcpServer_waitForNewConnection1)(void* x0, int x1);
QTCEXPORT(void,qtc_QTcpServer_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QTcpServer_getFinalizer)();
QTCEXPORT(void,qtc_QTcpServer_delete)(void* x0);
QTCEXPORT(void,qtc_QTcpServer_deleteLater)(void* x0);
QTCEXPORT(void,qtc_QTcpServer_childEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QTcpServer_connectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QTcpServer_customEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QTcpServer_disconnectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QTcpServer_event)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QTcpServer_event_h)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QTcpServer_eventFilter)(void* x0, void* x1, void* x2);
QTCEXPORT(bool,qtc_QTcpServer_eventFilter_h)(void* x0, void* x1, void* x2);
QTCEXPORT(int,qtc_QTcpServer_receivers)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QTcpServer_sender)(void* x0);
QTCEXPORT(void,qtc_QTcpServer_timerEvent)(void* x0, void* x1);
QTCEXPORT(bool, qtc_QTcpServer_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QTcpServer_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpServer_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpServer_setHandler3)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpServer_setHandler4)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QTcpSocket)();
QTCEXPORT(void*,qtc_QTcpSocket1)(void* x1);
QTCEXPORT(void,qtc_QTcpSocket_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QTcpSocket_getFinalizer)();
QTCEXPORT(void,qtc_QTcpSocket_delete)(void* x0);
QTCEXPORT(void,qtc_QTcpSocket_deleteLater)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_atEnd)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_atEnd_h)(void* x0);
QTCEXPORT(long long int,qtc_QTcpSocket_bytesAvailable)(void* x0);
QTCEXPORT(long long int,qtc_QTcpSocket_bytesAvailable_h)(void* x0);
QTCEXPORT(long long int,qtc_QTcpSocket_bytesToWrite)(void* x0);
QTCEXPORT(long long int,qtc_QTcpSocket_bytesToWrite_h)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_canReadLine)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_canReadLine_h)(void* x0);
QTCEXPORT(void,qtc_QTcpSocket_close)(void* x0);
QTCEXPORT(void,qtc_QTcpSocket_close_h)(void* x0);
QTCEXPORT(void,qtc_QTcpSocket_connectToHostImplementation)(void* x0, wchar_t* x1, unsigned short x2);
QTCEXPORT(void,qtc_QTcpSocket_connectToHostImplementation1)(void* x0, wchar_t* x1, unsigned short x2, long x3);
QTCEXPORT(void,qtc_QTcpSocket_disconnectFromHostImplementation)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_isSequential)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_isSequential_h)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_isValid)(void* x0);
QTCEXPORT(void,qtc_QTcpSocket_setLocalAddress)(void* x0, void* x1);
QTCEXPORT(void,qtc_QTcpSocket_setLocalPort)(void* x0, unsigned short x1);
QTCEXPORT(void,qtc_QTcpSocket_setPeerAddress)(void* x0, void* x1);
QTCEXPORT(void,qtc_QTcpSocket_setPeerName)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QTcpSocket_setPeerPort)(void* x0, unsigned short x1);
QTCEXPORT(void,qtc_QTcpSocket_setSocketError)(void* x0, long x1);
QTCEXPORT(void,qtc_QTcpSocket_setSocketState)(void* x0, long x1);
QTCEXPORT(bool,qtc_QTcpSocket_waitForBytesWritten)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_waitForBytesWritten_h)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_waitForBytesWritten1)(void* x0, int x1);
QTCEXPORT(bool,qtc_QTcpSocket_waitForBytesWritten1_h)(void* x0, int x1);
QTCEXPORT(bool,qtc_QTcpSocket_waitForReadyRead)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_waitForReadyRead_h)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_waitForReadyRead1)(void* x0, int x1);
QTCEXPORT(bool,qtc_QTcpSocket_waitForReadyRead1_h)(void* x0, int x1);
QTCEXPORT(long long int,qtc_QTcpSocket_writeData)(void* x0, wchar_t* x1, long long int x2);
QTCEXPORT(bool,qtc_QTcpSocket_open)(void* x0, long x1);
QTCEXPORT(bool,qtc_QTcpSocket_open_h)(void* x0, long x1);
QTCEXPORT(long long int,qtc_QTcpSocket_pos)(void* x0);
QTCEXPORT(long long int,qtc_QTcpSocket_pos_h)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_reset)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_reset_h)(void* x0);
QTCEXPORT(bool,qtc_QTcpSocket_seek)(void* x0, long long int x1);
QTCEXPORT(bool,qtc_QTcpSocket_seek_h)(void* x0, long long int x1);
QTCEXPORT(void,qtc_QTcpSocket_setErrorString)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QTcpSocket_setOpenMode)(void* x0, long x1);
QTCEXPORT(long long int,qtc_QTcpSocket_size)(void* x0);
QTCEXPORT(long long int,qtc_QTcpSocket_size_h)(void* x0);
QTCEXPORT(void,qtc_QTcpSocket_childEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QTcpSocket_connectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QTcpSocket_customEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QTcpSocket_disconnectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QTcpSocket_event)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QTcpSocket_event_h)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QTcpSocket_eventFilter)(void* x0, void* x1, void* x2);
QTCEXPORT(bool,qtc_QTcpSocket_eventFilter_h)(void* x0, void* x1, void* x2);
QTCEXPORT(int,qtc_QTcpSocket_receivers)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QTcpSocket_sender)(void* x0);
QTCEXPORT(void,qtc_QTcpSocket_timerEvent)(void* x0, void* x1);
QTCEXPORT(bool, qtc_QTcpSocket_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QTcpSocket_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpSocket_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpSocket_setHandler3)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpSocket_setHandler4)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpSocket_setHandler5)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpSocket_setHandler6)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QTcpSocket_setHandler7)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QUdpSocket)();
QTCEXPORT(void*,qtc_QUdpSocket1)(void* x1);
QTCEXPORT(bool,qtc_QUdpSocket_bind)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_bind1)(void* x0, unsigned short x1);
QTCEXPORT(bool,qtc_QUdpSocket_bind2)(void* x0, void* x1, unsigned short x2);
QTCEXPORT(bool,qtc_QUdpSocket_bind3)(void* x0, unsigned short x1, long x2);
QTCEXPORT(bool,qtc_QUdpSocket_bind4)(void* x0, void* x1, unsigned short x2, long x3);
QTCEXPORT(bool,qtc_QUdpSocket_hasPendingDatagrams)(void* x0);
QTCEXPORT(long long int,qtc_QUdpSocket_pendingDatagramSize)(void* x0);
QTCEXPORT(long long int,qtc_QUdpSocket_writeDatagram)(void* x0, wchar_t* x1, void* x2, unsigned short x3);
QTCEXPORT(long long int,qtc_QUdpSocket_writeDatagram1)(void* x0, wchar_t* x1, long long int x2, void* x3, unsigned short x4);
QTCEXPORT(void,qtc_QUdpSocket_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QUdpSocket_getFinalizer)();
QTCEXPORT(void,qtc_QUdpSocket_delete)(void* x0);
QTCEXPORT(void,qtc_QUdpSocket_deleteLater)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_atEnd)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_atEnd_h)(void* x0);
QTCEXPORT(long long int,qtc_QUdpSocket_bytesAvailable)(void* x0);
QTCEXPORT(long long int,qtc_QUdpSocket_bytesAvailable_h)(void* x0);
QTCEXPORT(long long int,qtc_QUdpSocket_bytesToWrite)(void* x0);
QTCEXPORT(long long int,qtc_QUdpSocket_bytesToWrite_h)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_canReadLine)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_canReadLine_h)(void* x0);
QTCEXPORT(void,qtc_QUdpSocket_close)(void* x0);
QTCEXPORT(void,qtc_QUdpSocket_close_h)(void* x0);
QTCEXPORT(void,qtc_QUdpSocket_connectToHostImplementation)(void* x0, wchar_t* x1, unsigned short x2);
QTCEXPORT(void,qtc_QUdpSocket_connectToHostImplementation1)(void* x0, wchar_t* x1, unsigned short x2, long x3);
QTCEXPORT(void,qtc_QUdpSocket_disconnectFromHostImplementation)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_isSequential)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_isSequential_h)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_isValid)(void* x0);
QTCEXPORT(void,qtc_QUdpSocket_setLocalAddress)(void* x0, void* x1);
QTCEXPORT(void,qtc_QUdpSocket_setLocalPort)(void* x0, unsigned short x1);
QTCEXPORT(void,qtc_QUdpSocket_setPeerAddress)(void* x0, void* x1);
QTCEXPORT(void,qtc_QUdpSocket_setPeerName)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUdpSocket_setPeerPort)(void* x0, unsigned short x1);
QTCEXPORT(void,qtc_QUdpSocket_setSocketError)(void* x0, long x1);
QTCEXPORT(void,qtc_QUdpSocket_setSocketState)(void* x0, long x1);
QTCEXPORT(bool,qtc_QUdpSocket_waitForBytesWritten)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_waitForBytesWritten_h)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_waitForBytesWritten1)(void* x0, int x1);
QTCEXPORT(bool,qtc_QUdpSocket_waitForBytesWritten1_h)(void* x0, int x1);
QTCEXPORT(bool,qtc_QUdpSocket_waitForReadyRead)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_waitForReadyRead_h)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_waitForReadyRead1)(void* x0, int x1);
QTCEXPORT(bool,qtc_QUdpSocket_waitForReadyRead1_h)(void* x0, int x1);
QTCEXPORT(long long int,qtc_QUdpSocket_writeData)(void* x0, wchar_t* x1, long long int x2);
QTCEXPORT(bool,qtc_QUdpSocket_open)(void* x0, long x1);
QTCEXPORT(bool,qtc_QUdpSocket_open_h)(void* x0, long x1);
QTCEXPORT(long long int,qtc_QUdpSocket_pos)(void* x0);
QTCEXPORT(long long int,qtc_QUdpSocket_pos_h)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_reset)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_reset_h)(void* x0);
QTCEXPORT(bool,qtc_QUdpSocket_seek)(void* x0, long long int x1);
QTCEXPORT(bool,qtc_QUdpSocket_seek_h)(void* x0, long long int x1);
QTCEXPORT(void,qtc_QUdpSocket_setErrorString)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUdpSocket_setOpenMode)(void* x0, long x1);
QTCEXPORT(long long int,qtc_QUdpSocket_size)(void* x0);
QTCEXPORT(long long int,qtc_QUdpSocket_size_h)(void* x0);
QTCEXPORT(void,qtc_QUdpSocket_childEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QUdpSocket_connectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUdpSocket_customEvent)(void* x0, void* x1);
QTCEXPORT(void,qtc_QUdpSocket_disconnectNotify)(void* x0, wchar_t* x1);
QTCEXPORT(bool,qtc_QUdpSocket_event)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QUdpSocket_event_h)(void* x0, void* x1);
QTCEXPORT(bool,qtc_QUdpSocket_eventFilter)(void* x0, void* x1, void* x2);
QTCEXPORT(bool,qtc_QUdpSocket_eventFilter_h)(void* x0, void* x1, void* x2);
QTCEXPORT(int,qtc_QUdpSocket_receivers)(void* x0, wchar_t* x1);
QTCEXPORT(void*,qtc_QUdpSocket_sender)(void* x0);
QTCEXPORT(void,qtc_QUdpSocket_timerEvent)(void* x0, void* x1);
QTCEXPORT(bool, qtc_QUdpSocket_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QUdpSocket_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUdpSocket_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUdpSocket_setHandler3)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUdpSocket_setHandler4)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUdpSocket_setHandler5)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUdpSocket_setHandler6)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUdpSocket_setHandler7)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(void*,qtc_QUrlInfo)();
QTCEXPORT(void*,qtc_QUrlInfo1)(void* x1);
QTCEXPORT(void*,qtc_QUrlInfo2)(void* x1, int x2, wchar_t* x3, wchar_t* x4, long long int x5, void* x6, void* x7, bool x8, bool x9, bool x10, bool x11, bool x12, bool x13);
QTCEXPORT(void*,qtc_QUrlInfo3)(wchar_t* x1, int x2, wchar_t* x3, wchar_t* x4, long long int x5, void* x6, void* x7, bool x8, bool x9, bool x10, bool x11, bool x12, bool x13);
QTCEXPORT(bool,qtc_QUrlInfo_equal)(void* x1, void* x2, int x3);
QTCEXPORT(bool,qtc_QUrlInfo_greaterThan)(void* x1, void* x2, int x3);
QTCEXPORT(void*,qtc_QUrlInfo_group)(void* x0);
QTCEXPORT(bool,qtc_QUrlInfo_isDir)(void* x0);
QTCEXPORT(bool,qtc_QUrlInfo_isExecutable)(void* x0);
QTCEXPORT(bool,qtc_QUrlInfo_isFile)(void* x0);
QTCEXPORT(bool,qtc_QUrlInfo_isReadable)(void* x0);
QTCEXPORT(bool,qtc_QUrlInfo_isSymLink)(void* x0);
QTCEXPORT(bool,qtc_QUrlInfo_isValid)(void* x0);
QTCEXPORT(bool,qtc_QUrlInfo_isWritable)(void* x0);
QTCEXPORT(void*,qtc_QUrlInfo_lastModified)(void* x0);
QTCEXPORT(void*,qtc_QUrlInfo_lastRead)(void* x0);
QTCEXPORT(bool,qtc_QUrlInfo_lessThan)(void* x1, void* x2, int x3);
QTCEXPORT(void*,qtc_QUrlInfo_name)(void* x0);
QTCEXPORT(void*,qtc_QUrlInfo_owner)(void* x0);
QTCEXPORT(int,qtc_QUrlInfo_permissions)(void* x0);
QTCEXPORT(void,qtc_QUrlInfo_setDir)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setDir_h)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setFile)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setFile_h)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setGroup)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUrlInfo_setGroup_h)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUrlInfo_setLastModified)(void* x0, void* x1);
QTCEXPORT(void,qtc_QUrlInfo_setLastModified_h)(void* x0, void* x1);
QTCEXPORT(void,qtc_QUrlInfo_setName)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUrlInfo_setName_h)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUrlInfo_setOwner)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUrlInfo_setOwner_h)(void* x0, wchar_t* x1);
QTCEXPORT(void,qtc_QUrlInfo_setPermissions)(void* x0, int x1);
QTCEXPORT(void,qtc_QUrlInfo_setPermissions_h)(void* x0, int x1);
QTCEXPORT(void,qtc_QUrlInfo_setReadable)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setReadable_h)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setSize)(void* x0, long long int x1);
QTCEXPORT(void,qtc_QUrlInfo_setSize_h)(void* x0, long long int x1);
QTCEXPORT(void,qtc_QUrlInfo_setSymLink)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setSymLink_h)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setWritable)(void* x0, bool x1);
QTCEXPORT(void,qtc_QUrlInfo_setWritable_h)(void* x0, bool x1);
QTCEXPORT(long long int,qtc_QUrlInfo_size)(void* x0);
QTCEXPORT(void,qtc_QUrlInfo_finalizer)(void* x0);
QTCEXPORT(void*,qtc_QUrlInfo_getFinalizer)();
QTCEXPORT(void,qtc_QUrlInfo_finalizer1)(void* x0);
QTCEXPORT(void*,qtc_QUrlInfo_getFinalizer1)();
QTCEXPORT(void,qtc_QUrlInfo_delete)(void* x0);
QTCEXPORT(void,qtc_QUrlInfo_delete1)(void* x0);
QTCEXPORT(bool, qtc_QUrlInfo_unSetHandler)(void* x0, wchar_t* x1);
QTCEXPORT(bool, qtc_QUrlInfo_setHandler1)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUrlInfo_setHandler2)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUrlInfo_setHandler3)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
QTCEXPORT(bool, qtc_QUrlInfo_setHandler4)(void* x0, wchar_t* x1, void* x2, void* x3, void* x4);
